#include "ShootOne.h"
ShootOne::ShootOne()
:seenOne(false)
{
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::conveyor);
	Requires(Robot::intake);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void ShootOne::Initialize() {
}
// Called repeatedly when this Command is scheduled to run
void ShootOne::Execute() {
	Robot::conveyor->stopper->Set(DoubleSolenoid::kForward);
	Robot::conveyor->conveyor->Set(-1.0);
	Robot::intake->intake->Set(-1.0);
	
}
// Make this return true when this Comma and no longer needs to run execute()
bool ShootOne::IsFinished() {
	if(Robot::conveyor->lightSensor->Get())
	{
		seenOne = true;
	}
	else if(seenOne)
	{
		seenOne = false;
		return true;
	}
	return false;
}
// Called once after isFinished returns true
void ShootOne::End() {
	Robot::conveyor->conveyor->Set(0.0);
	Robot::intake->intake->Set(0.0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShootOne::Interrupted() {
	Robot::conveyor->conveyor->Set(0.0);
	Robot::intake->intake->Set(0.0);
}
